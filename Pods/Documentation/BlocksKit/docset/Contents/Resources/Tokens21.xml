<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Categories/UIActionSheet+BlocksKit.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cat/UIActionSheet(BlocksKit)</TokenIdentifier>
			<Abstract type="html">UIActionSheet without delegates!</Abstract>
			<DeclaredIn>UIActionSheet+BlocksKit.h</DeclaredIn>
			
			<NodeRef refid="21"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UIActionSheet(BlocksKit)/actionSheetWithTitle:</TokenIdentifier>
			<Abstract type="html">Creates and returns a new action sheet with only a title and cancel button.</Abstract>
			<DeclaredIn>UIActionSheet+BlocksKit.h</DeclaredIn>			
			
			<Declaration>+ (id)actionSheetWithTitle:(NSString *)title</Declaration>
			<Parameters>
				<Parameter>
					<Name>title</Name>
					<Abstract type="html">The header of the action sheet.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A newly created action sheet.</Abstract></ReturnValue>
			<Anchor>//api/name/actionSheetWithTitle:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UIActionSheet(BlocksKit)/initWithTitle:</TokenIdentifier>
			<Abstract type="html">Returns a configured action sheet with only a title and cancel button.</Abstract>
			<DeclaredIn>UIActionSheet+BlocksKit.h</DeclaredIn>			
			
			<Declaration>- (id)initWithTitle:(NSString *)title</Declaration>
			<Parameters>
				<Parameter>
					<Name>title</Name>
					<Abstract type="html">The header of the action sheet.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An instantiated actionSheet.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithTitle:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UIActionSheet(BlocksKit)/addButtonWithTitle:handler:</TokenIdentifier>
			<Abstract type="html">Add a new button with an associated code block.</Abstract>
			<DeclaredIn>UIActionSheet+BlocksKit.h</DeclaredIn>			
			
			<Declaration>- (NSInteger)addButtonWithTitle:(NSString *)title handler:(BKBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>title</Name>
					<Abstract type="html">The text of the button.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">A block of code.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addButtonWithTitle:handler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UIActionSheet(BlocksKit)/setDestructiveButtonWithTitle:handler:</TokenIdentifier>
			<Abstract type="html">Set the destructive (red) button with an associated code block.</Abstract>
			<DeclaredIn>UIActionSheet+BlocksKit.h</DeclaredIn>			
			
			<Declaration>- (NSInteger)setDestructiveButtonWithTitle:(NSString *)title handler:(BKBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>title</Name>
					<Abstract type="html">The text of the button.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">A block of code.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setDestructiveButtonWithTitle:handler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UIActionSheet(BlocksKit)/setCancelButtonWithTitle:handler:</TokenIdentifier>
			<Abstract type="html">Set the title and trigger of the cancel button.</Abstract>
			<DeclaredIn>UIActionSheet+BlocksKit.h</DeclaredIn>			
			
			<Declaration>- (NSInteger)setCancelButtonWithTitle:(NSString *)title handler:(BKBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>title</Name>
					<Abstract type="html">The text of the button.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">A block of code.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCancelButtonWithTitle:handler:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UIActionSheet(BlocksKit)/setHandler:forButtonAtIndex:</TokenIdentifier>
			<Abstract type="html">Sets the block that is to be fired when a button is pressed.</Abstract>
			<DeclaredIn>UIActionSheet+BlocksKit.h</DeclaredIn>			
			
			<Declaration>- (void)setHandler:(BKBlock)block forButtonAtIndex:(NSInteger)index</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">A code block, or nil to set no response.</Abstract>
				</Parameter><Parameter>
					<Name>index</Name>
					<Abstract type="html">The index of a button already added to the action sheet.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setHandler:forButtonAtIndex:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UIActionSheet(BlocksKit)/handlerForButtonAtIndex:</TokenIdentifier>
			<Abstract type="html">The block that is to be fired when a button is pressed.</Abstract>
			<DeclaredIn>UIActionSheet+BlocksKit.h</DeclaredIn>			
			
			<Declaration>- (BKBlock)handlerForButtonAtIndex:(NSInteger)index</Declaration>
			<Parameters>
				<Parameter>
					<Name>index</Name>
					<Abstract type="html">The index of a button already added to the action sheet.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A code block, or nil if no block is assigned.</Abstract></ReturnValue>
			<Anchor>//api/name/handlerForButtonAtIndex:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UIActionSheet(BlocksKit)/setCancelBlock:</TokenIdentifier>
			<Abstract type="html">The block to be fired when the action sheet is dismissed with the cancel
button and/or action.</Abstract>
			<DeclaredIn>UIActionSheet+BlocksKit.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) BKBlock cancelBlock</Declaration>
			
			
			<Anchor>//api/name/cancelBlock</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/UIActionSheet(BlocksKit)/cancelBlock</TokenIdentifier>
			<Abstract type="html">The block to be fired when the action sheet is dismissed with the cancel
button and/or action.</Abstract>
			<DeclaredIn>UIActionSheet+BlocksKit.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) BKBlock cancelBlock</Declaration>
			
			
			<Anchor>//api/name/cancelBlock</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UIActionSheet(BlocksKit)/setWillShowBlock:</TokenIdentifier>
			<Abstract type="html">The block to be fired before the action sheet will show.</Abstract>
			<DeclaredIn>UIActionSheet+BlocksKit.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) void ( ^ ) ( UIActionSheet *) willShowBlock</Declaration>
			
			
			<Anchor>//api/name/willShowBlock</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/UIActionSheet(BlocksKit)/willShowBlock</TokenIdentifier>
			<Abstract type="html">The block to be fired before the action sheet will show.</Abstract>
			<DeclaredIn>UIActionSheet+BlocksKit.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) void ( ^ ) ( UIActionSheet *) willShowBlock</Declaration>
			
			
			<Anchor>//api/name/willShowBlock</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UIActionSheet(BlocksKit)/setDidShowBlock:</TokenIdentifier>
			<Abstract type="html">The block to be fired when the action sheet shows.</Abstract>
			<DeclaredIn>UIActionSheet+BlocksKit.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) void ( ^ ) ( UIActionSheet *) didShowBlock</Declaration>
			
			
			<Anchor>//api/name/didShowBlock</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/UIActionSheet(BlocksKit)/didShowBlock</TokenIdentifier>
			<Abstract type="html">The block to be fired when the action sheet shows.</Abstract>
			<DeclaredIn>UIActionSheet+BlocksKit.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) void ( ^ ) ( UIActionSheet *) didShowBlock</Declaration>
			
			
			<Anchor>//api/name/didShowBlock</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UIActionSheet(BlocksKit)/setWillDismissBlock:</TokenIdentifier>
			<Abstract type="html">The block to be fired before the action sheet will dismiss.</Abstract>
			<DeclaredIn>UIActionSheet+BlocksKit.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) void ( ^ ) ( UIActionSheet *, NSInteger ) willDismissBlock</Declaration>
			
			
			<Anchor>//api/name/willDismissBlock</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/UIActionSheet(BlocksKit)/willDismissBlock</TokenIdentifier>
			<Abstract type="html">The block to be fired before the action sheet will dismiss.</Abstract>
			<DeclaredIn>UIActionSheet+BlocksKit.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) void ( ^ ) ( UIActionSheet *, NSInteger ) willDismissBlock</Declaration>
			
			
			<Anchor>//api/name/willDismissBlock</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UIActionSheet(BlocksKit)/setDidDismissBlock:</TokenIdentifier>
			<Abstract type="html">The block to be fired after the action sheet dismisses.</Abstract>
			<DeclaredIn>UIActionSheet+BlocksKit.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) void ( ^ ) ( UIActionSheet *, NSInteger ) didDismissBlock</Declaration>
			
			
			<Anchor>//api/name/didDismissBlock</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/UIActionSheet(BlocksKit)/didDismissBlock</TokenIdentifier>
			<Abstract type="html">The block to be fired after the action sheet dismisses.</Abstract>
			<DeclaredIn>UIActionSheet+BlocksKit.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) void ( ^ ) ( UIActionSheet *, NSInteger ) didDismissBlock</Declaration>
			
			
			<Anchor>//api/name/didDismissBlock</Anchor>
		</Token>
		
	</File>
</Tokens>